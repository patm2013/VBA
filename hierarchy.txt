Sub makeHier()
    'instantiate the utility class
    Dim u As New util

    'create root dictionary
    Dim rootDic As Dictionary
    Set rootDic = New Dictionary
    
    'set root dictionary name to root
    rootDic("name") = "root"
    'set root dictionary children = new collection
    Set rootDic("children") = New Collection
    
    'set pivot table
    Dim pv As PivotTable
    Set pv = Range("A3").PivotTable
    'declare data arrays
    Dim arrLbls() As Variant, arrLblHeaders() As Variant, arrData() As Variant, arrDataHeaders As Variant
    
    arrLbls = u.pvLables(pv)
    arrLblHeaders = u.pvLableHeaders(pv)
    arrData = u.pvData(pv)
    arrDataHeaders = Range("G3")
    
    'create Current dictionary variable
    Dim curDic As Dictionary
    'create strName variable
    Dim strName As String
 
    'create childDic dictionary variable
    Dim childDic As Dictionary
    
    'create Row & Column counts
    Dim intRowMax As Integer, intColMax As Integer
    intRowMax = UBound(arrLbls, 1)
    intColMax = UBound(arrLbls, 2)
    

    'for each row in array
    For intRow = 1 To intRowMax
    
        'set current dictionary to root dictionary
        Set curDic = rootDic
    
        'for each column in row
        For intcol = 1 To intColMax
        
            'set strName = current cell
            strName = arrLbls(intRow, intcol)
            
            'if strName is not in current dictionaries children collection
            If Not inChildren(curDic, strName) Then
                'make child dictionary and add to current dictionaries children collection
                Call makeChildDic(curDic, strName)
                Set curDic = indexChildren(curDic, strName)
                If intcol = intColMax Then
                    curDic.Add "value", arrData(intRow, 1)
                End If
                'Debug.Print "NEW DICTIONARY - " & curDic("name")
            Else
                Set curDic = indexChildren(curDic, strName)
                'Debug.Print "CHANGED DICTIONARY TO - " & curDic("name")
            End If
            
        Next
        
    Next


    Dim intC  As Integer
    intC = 0
    Call pDics(rootDic, intC)


End Sub

Sub pDics(rootDic As Dictionary, intCount As Integer)

    Dim curDic As Dictionary
    Set curDic = rootDic
    Dim strName As String
    
    
    Dim colChildren As Collection
    
    Set colChildren = curDic("children")
    
    Dim childDic As Dictionary
    
    For x = 1 To colChildren.Count
        
        Set childDic = colChildren(x)
        strName = childDic("name")
    
        If childDic("children").Count = 0 Then
            Debug.Print Space(intCount * 4) & strName & ": " & childDic("value")
        Else
            Debug.Print Space(intCount * 4) & strName
            intCount = intCount + 1
            Call pDics(childDic, intCount)
            intCount = intCount - 1
        End If
    Next
    
End Sub

Sub makeChildDic(parentDic As Dictionary, strName As String)
    Dim childDic As Dictionary
    Set childDic = New Dictionary
    childDic("name") = strName
    Set childDic("children") = New Collection
    parentDic("children").Add childDic
End Sub

Function inChildren(rootDic As Dictionary, strName As String) As Boolean

    Dim childDic As Dictionary
    
    inChildren = False
    'if rootDic's children collection is not empty
   ' If rootDic("children").Count <> 0 Then
    'for each child dictionary in rootDic("children") collection
   '     For Each childDic In rootDic("children")
    '        'if child dictionaries name = str name
     '       If childDic("name") = strName Then
   '             'set inChildren = True
    '            inChildren = True
     '           Exit For
   '         End If
    '
     '   Next
   ' End If
    
    If rootDic("children").Count <> 0 Then
    'for each child dictionary in rootDic("children") collection
        x = rootDic("children").Count
        Do Until x = 0
            Set childDic = rootDic("children").Item(x)
            'if child dictionaries name = str name
            If childDic("name") = strName Then
                'set inChildren = True
                inChildren = True
                x = 1
            End If
            x = x - 1
        Loop
    End If
    

End Function
Function indexChildren(rootDic As Dictionary, strName As String) As Dictionary
    Dim childCol As Collection
    Dim childDic As Dictionary
    Dim intCount As Integer
    intCount = 1
    Set childCol = rootDic("children")
    For Each childDic In childCol
        If childDic("name") = strName Then
            Set indexChildren = childDic
        End If
    Next
    
End Function


Sub makeHier()
    'instantiate the utility class
    Dim u As New util

    'create root dictionary
    Dim rootDic As Dictionary
    Set rootDic = New Dictionary
    
    'set root dictionary name to root
    rootDic("name") = "root"
    'set root dictionary children = new collection
    Set rootDic("children") = New Collection
    
    'set pivot table
    Dim pv As PivotTable
    Set pv = Range("A3").PivotTable
    'declare data arrays
    Dim arrLbls() As Variant, arrLblHeaders() As Variant, arrData() As Variant, arrDataHeaders() As Variant
    
    arrLbls = u.pvLables(pv)
    arrLblHeaders = u.pvLableHeaders(pv)
    arrData = u.pvData(pv)
    arrDataHeaders = u.pvDataHeaders(pv)
    
    'create Current dictionary variable
    Dim curDic As Dictionary
    'create strName variable
    Dim strName As String
 
    'create childDic dictionary variable
    Dim childDic As Dictionary
    
    'create Row & Column counts
    Dim intRowMax As Integer, intColMax As Integer
    intRowMax = UBound(arrLbls, 1)
    intColMax = UBound(arrLbls, 2)
     Dim dVals As Dictionary
 
    'for each row in array
    For intRow = 1 To intRowMax
    
        'set current dictionary to root dictionary
        Set curDic = rootDic
    
        'for each column in row
        For intcol = 1 To intColMax
        
            'set strName = current cell
            strName = arrLbls(intRow, intcol)
            
            'if strName is not in current dictionaries children collection
            If Not inChildren(curDic, strName) Then
                'make child dictionary and add to current dictionaries children collection
                Call makeChildDic(curDic, strName)
                Set curDic = indexChildren(curDic, strName)
                If intcol = intColMax Then
                    
                    Set dVals = New Dictionary
                    
                    For x = 1 To UBound(arrData, 2)
                    
                        dVals.Add arrDataHeaders(1, x), arrData(intRow, x)
                    
                    Next
                    curDic.Add "values", dVals
                End If
                Debug.Print "NEW DICTIONARY - " & curDic("name")
            Else
                Set curDic = indexChildren(curDic, strName)
                Debug.Print "CHANGED DICTIONARY TO - " & curDic("name")
            End If
            
        Next
        
    Next


    Dim intC  As Integer
    intC = 0
    Call pDics(rootDic, intC)


End Sub

Sub pDics(rootDic As Dictionary, intCount As Integer)

    Dim curDic As Dictionary
    Set curDic = rootDic
    Dim strName As String
    Dim u As New util
    
    Dim colChildren As Collection
    
    Set colChildren = curDic("children")
    
    Dim childDic As Dictionary
    
    For x = 1 To colChildren.Count
        
        Set childDic = colChildren(x)
        strName = childDic("name")
    
        If childDic("children").Count = 0 Then
            Debug.Print Space(intCount * 4) & strName & ": "
            For k = 0 To childDic("values").Count - 1
                Debug.Print Space((intCount + 1) * 4) & u.dicStrKeyVal(childDic("values"), CInt(k), ": ")
            Next
        Else
            Debug.Print Space(intCount * 4) & strName
            intCount = intCount + 1
            Call pDics(childDic, intCount)
            intCount = intCount - 1
        End If
    Next
    
End Sub

Sub makeChildDic(parentDic As Dictionary, strName As String)
    Dim childDic As Dictionary
    Set childDic = New Dictionary
    childDic("name") = strName
    Set childDic("children") = New Collection
    parentDic("children").Add childDic
End Sub

Function inChildren(rootDic As Dictionary, strName As String) As Boolean

    Dim childDic As Dictionary
    
    inChildren = False
    'if rootDic's children collection is not empty
   ' If rootDic("children").Count <> 0 Then
    'for each child dictionary in rootDic("children") collection
   '     For Each childDic In rootDic("children")
    '        'if child dictionaries name = str name
     '       If childDic("name") = strName Then
   '             'set inChildren = True
    '            inChildren = True
     '           Exit For
   '         End If
    '
     '   Next
   ' End If
    
    If rootDic("children").Count <> 0 Then
    'for each child dictionary in rootDic("children") collection
        x = rootDic("children").Count
        Do Until x = 0
            Set childDic = rootDic("children").Item(x)
            'if child dictionaries name = str name
            If childDic("name") = strName Then
                'set inChildren = True
                inChildren = True
                x = 1
            End If
            x = x - 1
        Loop
    End If
    

End Function
Function indexChildren(rootDic As Dictionary, strName As String) As Dictionary
    Dim childCol As Collection
    Dim childDic As Dictionary
    Dim intCount As Integer
    intCount = 1
    Set childCol = rootDic("children")
    For Each childDic In childCol
        If childDic("name") = strName Then
            Set indexChildren = childDic
        End If
    Next
    
End Function

Sub ptTester()

    Dim pv As PivotTable
    Set pv = Range("A3").PivotTable
    pv.TableRange1.Select
    pv.TableRange2.Select

End Sub





Sub makeHier()
    'instantiate the utility class
    Dim u As New util

    'create root dictionary
    Dim rootDic As Dictionary
    Set rootDic = New Dictionary
    
    'set root dictionary name to root
    rootDic("name") = "root"
    'set root dictionary children = new collection
    Set rootDic("children") = New Collection
    
    'set pivot table
    Dim pv As PivotTable
    Set pv = Range("A3").PivotTable
    'declare data arrays
    Dim arrLbls() As Variant, arrLblHeaders() As Variant, arrData() As Variant, arrDataHeaders() As Variant
    
    arrLbls = u.pvLables(pv)
    arrLblHeaders = u.pvLableHeaders(pv)
    arrData = u.pvData(pv)
    If u.pvDataHeaders(pv).Columns.Count = 1 Then
        ReDim arrDataHeaders(1 To 1, 1 To 1)
        arrDataHeaders(1, 1) = u.pvDataHeaders(pv).Value
    Else
        arrDataHeaders = u.pvDataHeaders(pv)
    End If
    
    'create Current dictionary variable
    Dim curDic As Dictionary
    'create strName variable
    Dim strName As String
 
    'create childDic dictionary variable
    Dim childDic As Dictionary
    
    'create Row & Column counts
    Dim intRowMax As Integer, intColMax As Integer
    intRowMax = UBound(arrLbls, 1)
    intColMax = UBound(arrLbls, 2)
    
    Dim tmpValues As Collection
    Dim tmp As Dictionary
    
    'for each row in array
    For introw = 1 To intRowMax
    
        'set current dictionary to root dictionary
        Set curDic = rootDic
    
        'for each column in row
        For intcol = 1 To intColMax
        
            'set strName = current cell
            strName = arrLbls(introw, intcol)
            
            'if strName is not in current dictionaries children collection
            If Not inChildren(curDic, strName) Then
                'make child dictionary and add to current dictionaries children collection
                Call makeChildDic(curDic, strName)
                Set curDic = indexChildren(curDic, strName)
                If intcol = intColMax Then
                    Set tmpValues = New Collection
                    For valcol = 1 To UBound(arrData, 2)
                        Set tmpDic = New Dictionary
                        tmpDic.Add "name", arrDataHeaders(1, valcol)
                        tmpDic.Add "value", arrData(introw, valcol)
                        Debug.Print tmpDic("name") & " " & tmpDic("value")
                        tmpValues.Add tmpDic
                    Next
                    curDic.Add "values", tmpValues
                    
                End If
                'Debug.Print "NEW DICTIONARY - " & curDic("name")
            Else
                Set curDic = indexChildren(curDic, strName)
                'Debug.Print "CHANGED DICTIONARY TO - " & curDic("name")
            End If
            
        Next
        
    Next


    Dim intC  As Integer
    intC = 0
    Open "C:\Users\Patrick\Documents\GitHub\VBA\test.txt" For Output As #1
    Call pDics(rootDic, intC, arrLblHeaders, arrDataHeaders)
    Close #1

End Sub

Sub pDics(rootDic As Dictionary, intCount As Integer, lbls As Variant, lblsD As Variant)

    Dim curDic As Dictionary
    Set curDic = rootDic
    Dim strName As String
    
    Dim u As New util
    
    
    Dim colChildren As Collection
    
    Set colChildren = curDic("children")
    
    Dim childDic As Dictionary
    
    Dim strRows As String
    
    For x = 1 To colChildren.Count
        Set childDic = colChildren(x)
        strName = childDic("name")
    
        If childDic("children").Count = 0 Then
            'strRows = strRows & u.ht("tr", u.ht("td", strName) & u.ht("td", childDic("value")))
            Dim tmpDic As Dictionary
            strRows = u.ht("td", strName)
            For Each dict In childDic("values")
                Set tmpDic = dict
                strRows = strRows & u.ht("td", tmpDic("value"))
            Next
            strRows = u.ht("tr", strRows)
            strRowall = strRowall & strRows
        Else
            
            intCount = intCount + 1
            Print #1, u.ht("h" & CStr(intCount), strName)
            Call pDics(childDic, intCount, lbls, lblsD)
            intCount = intCount - 1
        End If
    Next
    Dim strth As String
    If strRows <> "" Then
    strth = lbls(1, intCount + 1)
    For x = 1 To UBound(lblsD, 2)
        strdheaders = strdheaders & u.ht("td", (lblsD(1, x)))
    Next
    Print #1, u.ht("table", u.ht("tr", u.ht("td", strth) & strdheaders, "table-header") & strRowall, "g--12 card")
    End If
End Sub

Sub makeChildDic(parentDic As Dictionary, strName As String)
    Dim childDic As Dictionary
    Set childDic = New Dictionary
    childDic("name") = strName
    Set childDic("children") = New Collection
    parentDic("children").Add childDic
End Sub

Function inChildren(rootDic As Dictionary, strName As String) As Boolean

    Dim childDic As Dictionary
    
    inChildren = False
    'if rootDic's children collection is not empty
   ' If rootDic("children").Count <> 0 Then
    'for each child dictionary in rootDic("children") collection
   '     For Each childDic In rootDic("children")
    '        'if child dictionaries name = str name
     '       If childDic("name") = strName Then
   '             'set inChildren = True
    '            inChildren = True
     '           Exit For
   '         End If
    '
     '   Next
   ' End If
    
    If rootDic("children").Count <> 0 Then
    'for each child dictionary in rootDic("children") collection
        x = rootDic("children").Count
        Do Until x = 0
            Set childDic = rootDic("children").Item(x)
            'if child dictionaries name = str name
            If childDic("name") = strName Then
                'set inChildren = True
                inChildren = True
                x = 1
            End If
            x = x - 1
        Loop
    End If
    

End Function
Function indexChildren(rootDic As Dictionary, strName As String) As Dictionary
    Dim childCol As Collection
    Dim childDic As Dictionary
    Dim intCount As Integer
    intCount = 1
    Set childCol = rootDic("children")
    For Each childDic In childCol
        If childDic("name") = strName Then
            Set indexChildren = childDic
        End If
    Next
    
End Function
